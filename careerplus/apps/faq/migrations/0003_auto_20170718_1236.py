# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-18 07:06
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('partner', '0002_auto_20170707_1804'),
        ('faq', '0002_auto_20170707_1804'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScreenChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('heading', models.CharField(max_length=255, verbose_name='chapter')),
                ('answer', ckeditor.fields.RichTextField(blank=True, help_text='The answer text.', verbose_name='answer')),
                ('ordering', models.PositiveSmallIntegerField(default=1, help_text='An integer used to order the chapter             amongst others related to the same chapter. If not given this             chapter will be last in the list.', verbose_name='ordering')),
                ('status', models.IntegerField(choices=[(2, 'Active'), (1, 'Inactive'), (0, 'Moderation')], default=0, help_text="Only questions with their status set to 'Active' will be displayed.", verbose_name='status')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parentheading', to='faq.ScreenChapter', verbose_name='parentchapter')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partner.Vendor')),
            ],
            options={
                'verbose_name': 'Chapter',
                'verbose_name_plural': 'Screen Chapters',
                'ordering': ('heading',),
            },
        ),
        migrations.CreateModel(
            name='ScreenFAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('text', models.TextField(help_text='The actual question itself.', verbose_name='question')),
                ('answer', ckeditor.fields.RichTextField(blank=True, help_text='The answer text.', verbose_name='answer')),
                ('status', models.IntegerField(choices=[(6, 'Reverted'), (5, 'Rejected'), (4, 'InActive'), (3, 'Active'), (2, 'Moderation'), (1, 'Changed'), (0, 'Added')], default=0, help_text="Only questions with their status set to 'Active' will be displayed.", verbose_name='status')),
                ('sort_order', models.IntegerField(default=0, help_text='The order you would like the question to be displayed.', verbose_name='sort order')),
            ],
            options={
                'verbose_name': 'Screen FAQ',
                'verbose_name_plural': 'Screen FAQs',
                'ordering': ['-modified'],
            },
        ),
        migrations.AlterModelOptions(
            name='chapter',
            options={'ordering': ('heading',), 'permissions': (('console_add_chapter', 'Can Add Product Chapter From Console'), ('console_change_chapter', 'Can Change Product Chapter From Console'), ('console_moderate_chapter', 'Can Moderate Product Chapter From Console')), 'verbose_name': 'Chapter', 'verbose_name_plural': 'Chapters'},
        ),
        migrations.AlterModelOptions(
            name='faquestion',
            options={'ordering': ['-modified'], 'permissions': (('console_add_faq', 'Can Add FAQ From Console'), ('console_change_faq', 'Can Change FAQ From Console'), ('console_moderate_faq', 'Can Moderate FAQ From Console')), 'verbose_name': 'FAQ', 'verbose_name_plural': 'FAQs'},
        ),
        migrations.AddField(
            model_name='screenfaq',
            name='faq',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screenfaq', to='faq.FAQuestion', verbose_name='Original faq'),
        ),
        migrations.AddField(
            model_name='screenfaq',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partner.Vendor'),
        ),
    ]
