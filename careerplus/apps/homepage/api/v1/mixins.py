# Python Core Import
import logging

# Django Import
from django.utils import timezone
from django.conf import settings
from django.db.models import Count, F

# RestFramework Import

# Model Import
from shop.models import Category, Product, ProductSkill
from haystack.query import SearchQuerySet


class PopularProductMixin(object):

    def popular_courses_algorithm(self, class_category=settings.COURSE_SLUG, quantity=2):
        """
        According to the new algorithm of Trending courses
        1. Conversion ratio - (total sales generated by that product)[:3]
        2. Revenue per mile - (total amount of sales generated by that product * 1000 / Total views for that product) [:3]
        """
        try:
            product_obj = Product.objects.filter(product_class__slug__in=class_category,
                                                 active=True,
                                                 is_indexed=True)

            product_conversion_ratio = product_obj.order_by('-buy_count')[
                                       :quantity].values_list('id', flat=True)

            product_revenue_per_mile = product_obj.annotate(
                revenue=(F('buy_count') * F('inr_price')) * 1000 / F('cp_page_view')) \
                                           .exclude(id__in=list(product_conversion_ratio)).order_by('-revenue')[
                                       :quantity].values_list('id', flat=True)

            return product_obj, product_conversion_ratio, product_revenue_per_mile

        except Exception as e:
            logging.getLogger('error_log').error("%s" % str(e))
    
    def get_popular_courses(self,category,quantity=3):
        products = Product.objects.filter(category__id=category,
                                                    active=True,
                                                   is_indexed=True).order_by('-buy_count')[:quantity]
        return products   

    def get_products_json(self,product_ids):
        products = SearchQuerySet().filter(id__in=product_ids, pTP__in=[0, 1, 3]).exclude(
            id__in=settings.EXCLUDE_SEARCH_PRODUCTS
        )
        popularProducts = [
            {
                'id': product.id,
                'heading': product.pHd,
                'name': product.pNm,
                'url': product.pURL,
                'img': product.pImg,
                'img_alt': product.pImA,
                'rating': product.pARx,
                'price': product.pPinb,
                'vendor': product.pPvn,
                'stars': product.pStar,
                'provider': product.pPvn
             } for product in products ]

        return popularProducts 