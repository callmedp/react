# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-18 07:06
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cart', '0004_cart_coupon'),
        ('order', '0002_auto_20170707_1804'),
    ]

    operations = [
        migrations.CreateModel(
            name='ECash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('original', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Original')),
                ('current', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Current')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Last Used')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Default'), (1, 'Active - Can be used'), (2, 'Exhausted - In Transaction'), (3, "InActive - Can't be used"), (4, 'Archive - Points need to be archived')], default=0, verbose_name='Status')),
                ('txn', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction')),
            ],
            options={
                'verbose_name': 'E-Cash',
                'verbose_name_plural': 'E-Cashs',
                'ordering': ('-modified', '-created'),
            },
        ),
        migrations.CreateModel(
            name='ECashTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('ecash_value', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='ECash Value')),
                ('txn_type', models.PositiveSmallIntegerField(choices=[(0, 'Default'), (1, 'Added'), (2, 'Redeemed'), (3, 'Refund'), (4, 'Expired'), (5, 'Reverted')], default=0, verbose_name='Type')),
                ('ecash', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallettxn', to='wallet.ECash')),
            ],
            options={
                'verbose_name': 'ECash Transaction',
                'verbose_name_plural': 'ECash Transactions',
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('point_value', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Point Value')),
                ('txn_type', models.PositiveSmallIntegerField(choices=[(0, 'Default'), (1, 'Added'), (2, 'Redeemed'), (3, 'Refund'), (4, 'Expired'), (5, 'Reverted')], default=0, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Point Transaction',
                'verbose_name_plural': 'Point Transactions',
            },
        ),
        migrations.CreateModel(
            name='RewardPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('original', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Original')),
                ('current', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Current')),
                ('expiry', models.DateTimeField(blank=True, null=True, verbose_name='Expiry')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Last Used')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Default'), (1, 'Active- Can be used'), (2, 'Exhausted - In Transaction'), (3, 'Expired- Expired'), (4, "InActive- Can't be Used"), (5, 'Archive - Points need to be archived')], default=0, verbose_name='Status')),
                ('txn', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction')),
            ],
            options={
                'verbose_name': 'Reward Point',
                'verbose_name_plural': 'Reward Points',
                'ordering': ('-modified', '-created'),
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('owner', models.CharField(max_length=255, unique=True, verbose_name='Owner ID')),
                ('owner_email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Owner Email')),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
                'ordering': ('-modified', '-created'),
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('txn_type', models.PositiveSmallIntegerField(choices=[(0, 'Default'), (1, 'Added'), (2, 'Redeemed'), (3, 'Refund'), (4, 'Expired'), (5, 'Reverted')], default=0, verbose_name='Type')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Working'), (1, 'Success'), (2, 'Failure')], default=0, verbose_name='status')),
                ('notes', models.TextField(blank=True, default='', verbose_name='Description')),
                ('txn', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction')),
                ('point_value', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Point Value')),
                ('ecash_value', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Cash Value')),
                ('cart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallettxn', to='cart.Cart', verbose_name='Cart')),
                ('ecash_txn', models.ManyToManyField(blank=True, through='wallet.ECashTransaction', to='wallet.ECash', verbose_name='ECash')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallettxn', to='order.Order', verbose_name='Order')),
                ('point_txn', models.ManyToManyField(blank=True, through='wallet.PointTransaction', to='wallet.RewardPoint', verbose_name='Point')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallettxn', to='wallet.Wallet', verbose_name='wallet')),
            ],
            options={
                'verbose_name': 'Wallet Transaction',
                'verbose_name_plural': 'Wallet Transactions',
                'ordering': ('-modified', '-created'),
            },
        ),
        migrations.AddField(
            model_name='rewardpoint',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point', to='wallet.Wallet', verbose_name='wallet'),
        ),
        migrations.AddField(
            model_name='pointtransaction',
            name='point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallettxn', to='wallet.RewardPoint'),
        ),
        migrations.AddField(
            model_name='pointtransaction',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usedpoint', to='wallet.WalletTransaction'),
        ),
        migrations.AddField(
            model_name='ecashtransaction',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usedcash', to='wallet.WalletTransaction'),
        ),
        migrations.AddField(
            model_name='ecash',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecash', to='wallet.Wallet', verbose_name='wallet'),
        ),
        migrations.AlterUniqueTogether(
            name='pointtransaction',
            unique_together=set([('point', 'transaction')]),
        ),
        migrations.AlterUniqueTogether(
            name='ecashtransaction',
            unique_together=set([('ecash', 'transaction')]),
        ),
    ]
