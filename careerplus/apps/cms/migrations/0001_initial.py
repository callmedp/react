# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-04 11:05
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ColumnHeading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3)])),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('message', models.TextField()),
                ('submit_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('is_removed', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_comment_created_by', related_query_name='cms_comments', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_comment_last_modified_by', related_query_name='cms_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc', models.FileField(max_length=200, upload_to='documents/cms/page/', verbose_name='Document')),
                ('is_active', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-priority'],
            },
        ),
        migrations.CreateModel(
            name='IndexColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3)])),
                ('url', models.CharField(blank=True, max_length=2048, null=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='IndexerWidget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('heading', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_indexerwidget_created_by', related_query_name='cms_indexerwidgets', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_indexerwidget_last_modified_by', related_query_name='cms_indexerwidgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(help_text='The H1 heading for the page.', max_length=255, verbose_name='Title')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='The content of the page containing \t\tthe h2 and other content about the product.', verbose_name='Description')),
                ('short_desc', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='Very short description of the page in about 50 \t\t words', verbose_name='Short Description')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('total_view', models.PositiveIntegerField(default=0)),
                ('total_download', models.PositiveIntegerField(default=0)),
                ('total_share', models.PositiveIntegerField(default=0)),
                ('status', models.PositiveIntegerField(choices=[(0, 'Draft'), (1, 'Published')], default=0)),
                ('active', models.BooleanField(default=False)),
                ('show_menu', models.BooleanField(default=False)),
                ('allow_comment', models.BooleanField(default=False)),
                ('comment_count', models.PositiveIntegerField(default=0)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(help_text="Used to build the category's URL.", max_length=255, unique=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=False)),
                ('show_menu', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_pagecategory_created_by', related_query_name='cms_pagecategorys', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_pagecategory_last_modified_by', related_query_name='cms_pagecategorys', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.PageCategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_period', models.DateField()),
                ('no_views', models.PositiveIntegerField(default=0)),
                ('no_downloads', models.PositiveIntegerField(default=0)),
                ('no_shares', models.PositiveIntegerField(default=0)),
                ('added_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Page')),
            ],
            options={
                'ordering': ['-count_period'],
            },
        ),
        migrations.CreateModel(
            name='PageWidget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('section', models.CharField(choices=[('left', 'LEFT'), ('right', 'RIGHT')], help_text='determine section of widget', max_length=255)),
                ('ranking', models.IntegerField(default=0, help_text='determine ranking of widget')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_pagewidget_created_by', related_query_name='cms_pagewidgets', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_pagewidget_last_modified_by', related_query_name='cms_pagewidgets', to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Page')),
            ],
            options={
                'ordering': ['section', '-ranking'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(help_text="Used to build the category's URL.", max_length=255, unique=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=False)),
                ('show_menu', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_tag_created_by', related_query_name='cms_tags', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_tag_last_modified_by', related_query_name='cms_tags', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('widget_type', models.PositiveIntegerField(choices=[(3, 'Text article'), (4, 'Resume download'), (6, 'Related blog'), (7, 'Testimonial'), (10, 'Expert section'), (12, 'Call Back'), (15, 'AdLink'), (16, 'Indexer Widget')])),
                ('name', models.CharField(max_length=200)),
                ('template_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('heading', models.CharField(blank=True, max_length=1024, null=True)),
                ('redirect_url', models.URLField(blank=True, help_text='Append http://.', null=True, verbose_name='Re-directing Url')),
                ('image', models.FileField(blank=True, help_text='use this for Resume help', max_length=200, null=True, upload_to='images/cms/widget/', verbose_name='Image')),
                ('image_alt', models.CharField(blank=True, max_length=100, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('document_upload', models.FileField(blank=True, max_length=200, null=True, upload_to='documents/cms/widget/', verbose_name='Document')),
                ('upload_template', models.FileField(blank=True, max_length=1024, null=True, upload_to='templates/includes/cms/')),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
                ('writer_designation', models.CharField(blank=True, max_length=255, null=True)),
                ('is_external', models.BooleanField(default=False)),
                ('is_pop_up', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_widget_created_by', related_query_name='cms_widgets', to=settings.AUTH_USER_MODEL)),
                ('iw', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.IndexerWidget', verbose_name='Indexer Widget')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_widget_last_modified_by', related_query_name='cms_widgets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, help_text='for user or writer', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pagewidget',
            name='widget',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Widget'),
        ),
        migrations.AddField(
            model_name='page',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.PageCategory'),
        ),
        migrations.AddField(
            model_name='page',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_page_created_by', related_query_name='cms_pages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='page',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cms_page_last_modified_by', related_query_name='cms_pages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='page',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.Page', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='page',
            name='related_pages',
            field=models.ManyToManyField(blank=True, related_name='_page_related_pages_+', to='cms.Page', verbose_name='Realted Page'),
        ),
        migrations.AddField(
            model_name='page',
            name='tag',
            field=models.ManyToManyField(blank=True, help_text='Add the tags to make some relation \t\tbetween the pages.', related_name='related_tag', to='cms.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='page',
            name='widgets',
            field=models.ManyToManyField(blank=True, through='cms.PageWidget', to='cms.Widget', verbose_name='Widgets'),
        ),
        migrations.AddField(
            model_name='indexcolumn',
            name='indexer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.IndexerWidget'),
        ),
        migrations.AddField(
            model_name='document',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Page'),
        ),
        migrations.AddField(
            model_name='comment',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Page'),
        ),
        migrations.AddField(
            model_name='comment',
            name='replied_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='cms.Comment'),
        ),
        migrations.AddField(
            model_name='columnheading',
            name='indexer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.IndexerWidget'),
        ),
        migrations.AlterUniqueTogether(
            name='pagewidget',
            unique_together=set([('page', 'widget')]),
        ),
        migrations.AlterUniqueTogether(
            name='pagecounter',
            unique_together=set([('page', 'count_period')]),
        ),
    ]
