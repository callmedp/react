# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-18 07:06
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import shop.functions


class Migration(migrations.Migration):

    dependencies = [
        ('faq', '0003_auto_20170718_1236'),
        ('geolocation', '0001_initial'),
        ('partner', '0002_auto_20170707_1804'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQProductScreen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('question_order', models.PositiveIntegerField(default=1, verbose_name='Question Order')),
            ],
            options={
                'verbose_name': 'Product Screen FAQ',
                'ordering': ('-question_order', 'pk'),
                'verbose_name_plural': 'Product Screen FAQs',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeScreen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('value_text', models.CharField(blank=True, max_length=100, verbose_name='Value Text')),
                ('value_integer', models.PositiveSmallIntegerField(default=0, verbose_name='Value Integer')),
                ('value_boolean', models.BooleanField(default=False, verbose_name='Boolean')),
                ('value_date', models.DateTimeField(blank=True, null=True, verbose_name='Value Date')),
                ('value_decimal', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Value Date')),
                ('value_ltext', ckeditor.fields.RichTextField(blank=True, default='', verbose_name='Value Large Text')),
                ('value_file', models.FileField(blank=True, max_length=255, null=True, upload_to=shop.functions.get_upload_path_product_file)),
                ('value_image', models.ImageField(blank=True, max_length=255, null=True, upload_to=shop.functions.get_upload_path_product_image)),
                ('entity_object_id', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, verbose_name='Url')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Title')),
                ('meta_desc', models.TextField(blank=True, default='', verbose_name='Meta Description')),
                ('meta_keywords', models.TextField(blank=True, default='', verbose_name='Keywords')),
                ('heading', models.CharField(blank=True, max_length=255, verbose_name='H1')),
                ('image_alt', models.CharField(blank=True, max_length=255, verbose_name='Image Alt')),
                ('name', models.CharField(help_text='Unique name going to decide the slug', max_length=100, verbose_name='Name')),
                ('slug', models.CharField(help_text='Unique slug', max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Product Class',
                'verbose_name_plural': 'Product Classes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VariationProductScreen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('sort_order', models.PositiveIntegerField(default=1, verbose_name='Sort Order')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Product Screen Variation',
                'verbose_name_plural': 'Product Screen Variations',
            },
        ),
        migrations.RemoveField(
            model_name='productarchive',
            name='originalproduct',
        ),
        migrations.AlterUniqueTogether(
            name='productchapter',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='productchapter',
            name='chapter',
        ),
        migrations.RemoveField(
            model_name='productchapter',
            name='product',
        ),
        migrations.AlterUniqueTogether(
            name='productprice',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='productprice',
            name='currency',
        ),
        migrations.RemoveField(
            model_name='productprice',
            name='product',
        ),
        migrations.AlterModelOptions(
            name='attribute',
            options={'get_latest_by': 'created', 'ordering': ('-modified', '-created'), 'permissions': (('console_add_attribute', 'Can Add Attribute From Console'), ('console_change_attribute', 'Can Change Attribute From Console')), 'verbose_name': 'Atrribute', 'verbose_name_plural': 'Attributes'},
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'get_latest_by': 'created', 'ordering': ('-modified', '-created'), 'permissions': (('console_add_category', 'Can Add Category From Console'), ('console_change_category', 'Can Change Category From Console'), ('console_change_category_seo', 'Can Change Category SEO From Console'), ('console_change_category_main', 'Can Change Category Main From Console'), ('console_delete_category_relation', 'Can Delete Category Relation From Console')), 'verbose_name': 'Category', 'verbose_name_plural': 'Categories'},
        ),
        migrations.AlterModelOptions(
            name='keyword',
            options={'get_latest_by': 'created', 'ordering': ('-modified', '-created'), 'permissions': (('console_add_keyword', 'Can Add Keyword From Console'), ('console_change_keyword', 'Can Change Keyword From Console')), 'verbose_name': 'Keyword', 'verbose_name_plural': 'Keywords'},
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'get_latest_by': 'created', 'ordering': ('-modified', '-created'), 'permissions': (('console_add_product', 'Can Add Product From Console'), ('console_change_product', 'Can Change Product From Console'), ('console_moderate_product', 'Can Moderate Product From Console'), ('console_delete_product_relations', 'Can Delete Product From Console'), ('console_live_product', 'Can Live Product From Console')), 'verbose_name': 'Product', 'verbose_name_plural': 'Products'},
        ),
        migrations.RemoveField(
            model_name='attribute',
            name='is_comparable',
        ),
        migrations.RemoveField(
            model_name='categoryrelationship',
            name='relation',
        ),
        migrations.RemoveField(
            model_name='product',
            name='certification',
        ),
        migrations.RemoveField(
            model_name='product',
            name='chapters',
        ),
        migrations.RemoveField(
            model_name='product',
            name='course_type',
        ),
        migrations.RemoveField(
            model_name='product',
            name='duration_days',
        ),
        migrations.RemoveField(
            model_name='product',
            name='duration_months',
        ),
        migrations.RemoveField(
            model_name='product',
            name='experience',
        ),
        migrations.RemoveField(
            model_name='product',
            name='prices',
        ),
        migrations.RemoveField(
            model_name='product',
            name='requires_delivery',
        ),
        migrations.RemoveField(
            model_name='product',
            name='study_mode',
        ),
        migrations.RemoveField(
            model_name='productattribute',
            name='value_decimal',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='categories',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='certification',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='childs',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='course_type',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='duration_days',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='duration_months',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='experience',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='keywords',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='offers',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='originalproduct',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='prices',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='related',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='requires_delivery',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='siblings',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='study_mode',
        ),
        migrations.AddField(
            model_name='categoryrelationship',
            name='active',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='product',
            name='aed_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='AED Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='fake_aed_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Fake AED Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='fake_gbp_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Fake GBP Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='fake_inr_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Fake INR Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='fake_usd_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Fake USD Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='gbp_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='GBP Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='inr_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='INR Price'),
        ),
        migrations.AddField(
            model_name='product',
            name='is_indexable',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='product',
            name='prg_structure',
            field=ckeditor.fields.RichTextField(blank=True, default='', verbose_name='Program Structure'),
        ),
        migrations.AddField(
            model_name='product',
            name='usd_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='USD Price'),
        ),
        migrations.AddField(
            model_name='productattribute',
            name='value_boolean',
            field=models.BooleanField(default=False, verbose_name='Boolean'),
        ),
        migrations.AddField(
            model_name='productattribute',
            name='value_multi_option',
            field=models.ManyToManyField(blank=True, related_name='multi_valued_attribute_screen_values', to='shop.AttributeOption', verbose_name='Value multi option'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='aed_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='AED Price'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='comment',
            field=ckeditor.fields.RichTextField(blank=True, default='', verbose_name='Comments'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='countries',
            field=models.ManyToManyField(blank=True, related_name='countryscreen', to='geolocation.Country', verbose_name='Country Available'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='fake_aed_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Fake AED Price'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='fake_gbp_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Fake GBP Price'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='fake_inr_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Fake INR Price'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='fake_usd_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Fake USD Price'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='gbp_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='GBP Price'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='inr_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='INR Price'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='prg_structure',
            field=ckeditor.fields.RichTextField(blank=True, default='', verbose_name='Program Structure'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screenproduct', to='shop.Product', verbose_name='Original Product'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='status',
            field=models.IntegerField(choices=[(6, 'Reverted'), (5, 'Rejected'), (4, 'InActive'), (3, 'Active'), (2, 'Moderation'), (1, 'Changed'), (0, 'Added')], default=0, help_text="Only product with their status set to 'Active' will be displayed.", verbose_name='status'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='usd_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='USD Price'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='screenvendor', to='partner.Vendor', verbose_name='Product Vendor'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='display_name',
            field=models.CharField(help_text='Name going to displayed', max_length=100, verbose_name='Display Name'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='name',
            field=models.CharField(help_text='Unique name going to decide the slug', max_length=100, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='type_attribute',
            field=models.CharField(choices=[('text', 'Text'), ('integer', 'Integer'), ('boolean', 'True / False'), ('float', 'Float'), ('richtext', 'Rich Text'), ('date', 'Date'), ('option', 'Option'), ('multi_option', 'Multi Option'), ('entity', 'Entity'), ('file', 'File'), ('image', 'Image')], default='text', max_length=20, verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='attributeoptiongroup',
            name='name',
            field=models.CharField(max_length=128, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='product',
            name='childs',
            field=models.ManyToManyField(blank=True, related_name='comboproduct', through='shop.ChildProduct', to='shop.Product', verbose_name='Child Product'),
        ),
        migrations.AlterField(
            model_name='product',
            name='related',
            field=models.ManyToManyField(blank=True, related_name='relatedproduct', through='shop.RelatedProduct', to='shop.Product', verbose_name='Related Product'),
        ),
        migrations.AlterField(
            model_name='product',
            name='type_product',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Standalone/Simple'), (1, 'Variation-Parent'), (2, 'Variation-Child'), (3, 'Combo'), (4, 'No-Direct-Sell/Virtual'), (5, 'Downloadable')], default=0, verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='product',
            name='variation',
            field=models.ManyToManyField(blank=True, related_name='variationproduct', through='shop.VariationProduct', to='shop.Product', verbose_name='Variation Product'),
        ),
        migrations.AlterField(
            model_name='productattribute',
            name='value_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='productattribute',
            name='value_integer',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='Integer'),
        ),
        migrations.AlterField(
            model_name='productattribute',
            name='value_ltext',
            field=ckeditor.fields.RichTextField(blank=True, default='', verbose_name='Rich Text'),
        ),
        migrations.AlterField(
            model_name='productattribute',
            name='value_text',
            field=models.CharField(blank=True, max_length=100, verbose_name='Text'),
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='attributes',
        ),
        migrations.RemoveField(
            model_name='productscreen',
            name='faqs',
        ),
        migrations.AlterField(
            model_name='productscreen',
            name='type_product',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Standalone/Simple'), (1, 'Variation-Parent'), (2, 'Variation-Child'), (3, 'Combo'), (4, 'No-Direct-Sell/Virtual'), (5, 'Downloadable')], default=0, verbose_name='Type'),
        ),
        migrations.DeleteModel(
            name='ProductArchive',
        ),
        migrations.DeleteModel(
            name='ProductChapter',
        ),
        migrations.DeleteModel(
            name='ProductPrice',
        ),
        migrations.AddField(
            model_name='variationproductscreen',
            name='main',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainproduct', to='shop.ProductScreen'),
        ),
        migrations.AddField(
            model_name='variationproductscreen',
            name='sibling',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siblingproduct', to='shop.ProductScreen'),
        ),
        migrations.AddField(
            model_name='productattributescreen',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenattributes', to='shop.Attribute', verbose_name='Attribute'),
        ),
        migrations.AddField(
            model_name='productattributescreen',
            name='entity_content_type',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='productattributescreen',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenattributes', to='shop.ProductScreen', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='productattributescreen',
            name='value_multi_option',
            field=models.ManyToManyField(blank=True, related_name='multi_valued_attribute_values', to='shop.AttributeOption', verbose_name='Value multi option'),
        ),
        migrations.AddField(
            model_name='productattributescreen',
            name='value_option',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.AttributeOption', verbose_name='Value option'),
        ),
        migrations.AddField(
            model_name='faqproductscreen',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenfaqs', to='shop.ProductScreen', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='faqproductscreen',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenfaqs', to='faq.FAQuestion', verbose_name='FAQuestion'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='product_class',
            field=models.ForeignKey(blank=True, help_text='Choose what type of product this is', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='attributes', to='shop.ProductClass', verbose_name='Product Class'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_class',
            field=models.ForeignKey(blank=True, help_text='Choose what type of product this is', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='shop.ProductClass', verbose_name='Product Class'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='product_class',
            field=models.ForeignKey(blank=True, help_text='Choose what type of product this is', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='productscreens', to='shop.ProductClass', verbose_name='Product Class'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='variation',
            field=models.ManyToManyField(blank=True, related_name='variationproduct', through='shop.VariationProductScreen', to='shop.ProductScreen', verbose_name='Variation Product'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='attributes',
            field=models.ManyToManyField(blank=True, through='shop.ProductAttributeScreen', to='shop.Attribute', verbose_name='Product Attribute'),
        ),
        migrations.AddField(
            model_name='productscreen',
            name='faqs',
            field=models.ManyToManyField(blank=True, through='shop.FAQProductScreen', to='faq.FAQuestion', verbose_name='Product FAQ'),
        ),
        migrations.AlterUniqueTogether(
            name='variationproductscreen',
            unique_together=set([('main', 'sibling')]),
        ),
        migrations.AlterUniqueTogether(
            name='faqproductscreen',
            unique_together=set([('product', 'question')]),
        ),
    ]
