# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-07 12:34
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.CharField(max_length=255, null=True)),
                ('message', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('added_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['added_on'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('number', models.CharField(db_index=True, max_length=128, unique=True, verbose_name='Order number')),
                ('site', models.PositiveSmallIntegerField(choices=[(0, 'Shinelearning'), (1, 'Cpcrm')], default=0)),
                ('candidate_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer ID')),
                ('txn', models.CharField(blank=True, max_length=255, null=True)),
                ('instrument_number', models.CharField(blank=True, max_length=255, null=True)),
                ('instrument_issuer', models.CharField(blank=True, max_length=255, null=True)),
                ('instrument_issue_date', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Unpaid'), (1, 'Paid'), (2, 'InProcess'), (3, 'Closed'), (4, 'Archive')], default=0)),
                ('payment_mode', models.IntegerField(choices=[(0, 'Not Paid'), (1, 'Cash'), (3, 'EMI'), (4, 'Cheque or Draft'), (5, 'CC-Avenue'), (6, 'Mobikwik'), (7, 'CC-Avenue-International'), (8, 'Debit Card'), (9, 'Credit Card'), (10, 'Net Banking'), (11, 'Emi')], default=0)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=12, null=True, verbose_name='Currency')),
                ('total_incl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Order total (inc. tax)')),
                ('total_excl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Order total (excl. tax)')),
                ('date_placed', models.DateTimeField(db_index=True)),
                ('closed_on', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(max_length=255, null=True, verbose_name='Customer Email')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last Name')),
                ('country_code', models.CharField(blank=True, max_length=15, null=True, verbose_name='Country Code')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=15, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('welcome_call_done', models.BooleanField(default=False)),
                ('midout_sent_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-date_placed'],
                'verbose_name': 'Order',
                'permissions': (('can_show_order_queue', 'Can Show Order Queue'), ('can_show_all_order', 'Can View All Orders'), ('can_show_paid_order', 'Can View Only Paid Orders'), ('can_show_welcome_queue', 'Can Show Welcome Queue'), ('can_view_order_detail', 'Can View Order Deatil')),
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_name', models.CharField(blank=True, max_length=128, verbose_name='Partner name')),
                ('title', models.CharField(max_length=255, verbose_name='Product title')),
                ('upc', models.CharField(blank=True, max_length=128, null=True, verbose_name='UPC')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('oi_price_incl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Price (inc. tax)')),
                ('oi_price_excl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Price (excl. tax)')),
                ('oi_price_before_discounts_incl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Price before discounts (inc. tax)')),
                ('oi_price_before_discounts_excl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Price before discounts (excl. tax)')),
                ('unit_price_incl_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Unit Price (inc. tax)')),
                ('unit_price_excl_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Unit Price (excl. tax)')),
                ('no_process', models.BooleanField(default=False)),
                ('is_combo', models.BooleanField(default=False)),
                ('is_variation', models.BooleanField(default=False)),
                ('counselling_form_status', models.PositiveSmallIntegerField(choices=[(41, 'Counselling Form Not Submitted'), (42, 'Counselling Form Submitted')], default=0)),
                ('oi_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Resume Not Uploaded'), (3, 'Resume Uploded'), (4, 'Closed'), (10, 'On Hold by Vendor'), (11, 'Archived'), (21, 'Upload Draft'), (22, 'Draft Uploaded'), (23, 'Pending Approval'), (24, 'Approved'), (25, 'Rejected By Admin'), (26, 'Rejected By Candidate'), (43, 'Linkedin Draft Create'), (44, 'Linkedin Draft Created'), (45, 'Linkedin Pending Approval'), (46, 'Linkedin Approved'), (47, 'Linkedin Rejected By Admin'), (48, 'Linkedi Rejected By Candidate'), (61, 'Will start once resume is made'), (62, 'Resume Boosted')], default=0, verbose_name='Operation Status')),
                ('last_oi_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Resume Not Uploaded'), (3, 'Resume Uploded'), (4, 'Closed'), (10, 'On Hold by Vendor'), (11, 'Archived'), (21, 'Upload Draft'), (22, 'Draft Uploaded'), (23, 'Pending Approval'), (24, 'Approved'), (25, 'Rejected By Admin'), (26, 'Rejected By Candidate'), (43, 'Linkedin Draft Create'), (44, 'Linkedin Draft Created'), (45, 'Linkedin Pending Approval'), (46, 'Linkedin Approved'), (47, 'Linkedin Rejected By Admin'), (48, 'Linkedi Rejected By Candidate'), (61, 'Will start once resume is made'), (62, 'Resume Boosted')], default=0, verbose_name='Last Operation Status')),
                ('oi_resume', models.FileField(blank=True, default='', max_length=255, null=True, upload_to='oi_resume/')),
                ('oi_draft', models.FileField(blank=True, max_length=255, null=True, upload_to='oi_draft/')),
                ('draft_counter', models.PositiveIntegerField(default=0)),
                ('tat_date', models.DateTimeField(blank=True, null=True)),
                ('waiting_for_input', models.BooleanField(default=False)),
                ('closed_on', models.DateTimeField(blank=True, null=True)),
                ('draft_added_on', models.DateTimeField(blank=True, null=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('added_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['pk'],
                'verbose_name': 'Order Item',
                'permissions': (('can_show_midout_queue', 'Can Show Midout Queue'), ('can_upload_candidate_resume', 'Can Upload Candidate resume'), ('can_show_inbox_queue', 'Can Show Inbox Queue'), ('can_view_extra_field_inbox', 'Can View Extra Fields Of Inbox'), ('can_show_assigned_inbox', 'Can Show Only Assigned Inbox'), ('can_show_unassigned_inbox', 'Can Show Only Unassigned Inbox'), ('writer_assignment_action', 'Writer Assignment Action permission'), ('can_assigned_to_writer', 'Can Assigned To This Writer'), ('can_view_order_item_detail', 'Can View Order Item Detail'), ('writer_assignment_linkedin_action', 'Can Assign to Other linkedin writer'), ('can_assigned_to_linkedin_writer', 'Can Assigned To This linkedin Writer'), ('can_show_linkedinrejectedbyadmin_queue', 'Can View Linkedin Rejected By Admin Queue'), ('can_show_linkedinrejectedbycandidate_queue', 'Can View LinkedinRejected By Candidate Queue'), ('can_show_linkedin_approval_queue', 'Can View Linkedin Approval Queue'), ('can_show_approval_queue', 'Can View Approval Queue'), ('can_view_all_approval_list', 'Can View All Approval List'), ('can_view_only_assigned_approval_list', 'Can View Only Assigned Approval List'), ('can_approve_or_reject_draft', 'Can Approve Or Reject Draft'), ('can_show_approved_queue', 'Can View Approved Queue'), ('can_view_all_approved_list', 'Can View All Approved List'), ('can_view_only_assigned_approved_list', 'Can View Only Assigned Approved List'), ('can_show_rejectedbyadmin_queue', 'Can View Rejected By Admin Queue'), ('can_view_all_rejectedbyadmin_list', 'Can View All Rejected by Admin List'), ('can_view_only_assigned_rejectedbyadmin_list', 'Can View Only Assigned Rejected By Admin List'), ('can_show_rejectedbycandidate_queue', 'Can View Rejected By Candidate Queue'), ('can_view_all_rejectedbycandidate_list', 'Can View All Rejected By Candidate List'), ('can_view_only_assigned_rejectedbycandidate_list', 'Can View Only Assigned Rejected By Candidate List'), ('can_show_allocated_queue', 'Can Show Allocated Queue'), ('can_view_all_allocated_list', 'Can View All Allocated List'), ('can_view_only_assigned_allocated_list', 'Can View Only Assigned Allocated List'), ('can_show_booster_queue', 'Can Show Booster Queue'), ('can_show_closed_oi_queue', 'Can Show Closed Orderitem Queue'), ('can_view_all_closed_oi_list', 'Can View All Closed Orderitem List'), ('can_view_only_assigned_closed_oi_list', 'Can View Only Assigned Closed Orderitem List'), ('oi_action_permission', 'OrderItem Action Permission'), ('oi_export_as_csv_permission', 'Order Item Export As CSV Permission')),
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.CreateModel(
            name='OrderItemOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('oi_resume', models.FileField(blank=True, max_length=255, null=True, upload_to='oio_resume/')),
                ('oi_draft', models.FileField(blank=True, max_length=255, null=True, upload_to='oio_draft/')),
                ('draft_counter', models.PositiveIntegerField(default=0)),
                ('oi_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Resume Not Uploaded'), (3, 'Resume Uploded'), (4, 'Closed'), (10, 'On Hold by Vendor'), (11, 'Archived'), (21, 'Upload Draft'), (22, 'Draft Uploaded'), (23, 'Pending Approval'), (24, 'Approved'), (25, 'Rejected By Admin'), (26, 'Rejected By Candidate'), (43, 'Linkedin Draft Create'), (44, 'Linkedin Draft Created'), (45, 'Linkedin Pending Approval'), (46, 'Linkedin Approved'), (47, 'Linkedin Rejected By Admin'), (48, 'Linkedi Rejected By Candidate'), (61, 'Will start once resume is made'), (62, 'Resume Boosted')], default=0, verbose_name='Operation Status')),
                ('last_oi_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Resume Not Uploaded'), (3, 'Resume Uploded'), (4, 'Closed'), (10, 'On Hold by Vendor'), (11, 'Archived'), (21, 'Upload Draft'), (22, 'Draft Uploaded'), (23, 'Pending Approval'), (24, 'Approved'), (25, 'Rejected By Admin'), (26, 'Rejected By Candidate'), (43, 'Linkedin Draft Create'), (44, 'Linkedin Draft Created'), (45, 'Linkedin Pending Approval'), (46, 'Linkedin Approved'), (47, 'Linkedin Rejected By Admin'), (48, 'Linkedi Rejected By Candidate'), (61, 'Will start once resume is made'), (62, 'Resume Boosted')], default=0, verbose_name='Last Operation Status')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
    ]
