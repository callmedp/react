# Generated by Django 2.2.10 on 2020-06-08 18:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import order.functions


class Migration(migrations.Migration):

    replaces = [('order', '0001_initial'), ('order', '0002_auto_20170707_1804'), ('order', '0003_auto_20170718_1054'), ('order', '0004_internationalprofileuser'), ('order', '0005_auto_20170720_1035'), ('order', '0003_auto_20170720_1221'), ('order', '0006_merge_20170721_1235'), ('order', '0007_auto_20170727_1442'), ('order', '0008_order_invoice'), ('order', '0007_auto_20170728_1211'), ('order', '0009_merge_20170731_1107'), ('order', '0010_auto_20170801_1221'), ('order', '0011_auto_20170801_1222'), ('order', '0012_auto_20170804_1325'), ('order', '0007_auto_20170723_1711'), ('order', '0008_merge_20170801_1827'), ('order', '0013_merge_20170808_1214'), ('order', '0014_auto_20170821_1205'), ('order', '0015_auto_20170821_1322'), ('order', '0014_auto_20170818_1128'), ('order', '0016_merge_20170823_1729'), ('order', '0017_couponorder'), ('order', '0018_order_tax_config'), ('order', '0019_auto_20170831_1456'), ('order', '0020_order_payment_date'), ('order', '0017_emailorderitemoperation'), ('order', '0021_merge_20170901_1732'), ('order', '0022_auto_20170904_1646'), ('order', '0023_auto_20170905_1245'), ('order', '0024_auto_20170906_1432'), ('order', '0025_auto_20170906_1550'), ('order', '0026_auto_20170907_1814'), ('order', '0027_auto_20170911_1024'), ('order', '0028_auto_20170911_1544'), ('order', '0029_auto_20170911_1828'), ('order', '0030_orderitem_expiry_date'), ('order', '0031_auto_20170918_1201'), ('order', '0032_auto_20170918_1537'), ('order', '0031_auto_20170918_1121'), ('order', '0033_merge_20170918_1606'), ('order', '0022_auto_20170918_1227'), ('order', '0032_merge_20170918_1434'), ('order', '0034_merge_20170919_1627'), ('order', '0035_auto_20170926_2115'), ('order', '0036_auto_20171004_1454'), ('order', '0037_auto_20171005_1307'), ('order', '0036_auto_20171004_1333'), ('order', '0038_merge_20171005_1603'), ('order', '0039_auto_20171005_1606'), ('order', '0037_auto_20171005_1938'), ('order', '0038_merge_20171006_1045'), ('order', '0040_merge_20171007_1314'), ('order', '0040_merge_20171006_1617'), ('order', '0041_merge_20171007_1357'), ('order', '0042_auto_20171009_1045'), ('order', '0043_auto_20171017_1453'), ('order', '0044_auto_20171023_1253'), ('order', '0045_auto_20171031_2111'), ('order', '0046_auto_20171101_1305'), ('order', '0047_auto_20171107_1912'), ('order', '0048_auto_20171115_1252'), ('order', '0049_auto_20171207_1713'), ('order', '0050_auto_20180119_1239'), ('order', '0051_orderitem_assigned_date'), ('order', '0050_auto_20180118_1039'), ('order', '0051_merge_20180129_1714'), ('order', '0052_merge_20180205_1552'), ('order', '0053_auto_20180223_1326'), ('order', '0054_auto_20180223_1733'), ('order', '0053_auto_20180306_1229'), ('order', '0055_merge_20180322_1214'), ('order', '0056_auto_20180329_1050'), ('order', '0057_auto_20180329_1656'), ('order', '0058_auto_20180503_1532'), ('order', '0059_auto_20180704_1750'), ('order', '0060_auto_20180712_1250'), ('order', '0061_auto_20181206_1934'), ('order', '0062_auto_20190116_1640'), ('order', '0063_auto_20190314_1245'), ('order', '0064_order_welcome_call_records'), ('order', '0065_auto_20190411_1731'), ('order', '0064_orderitem_replacement_order_id'), ('order', '0066_merge_20190503_1121'), ('order', '0067_auto_20190509_0921'), ('order', '0066_merge_20190527_1428'), ('order', '0068_merge_20190603_1522'), ('order', '0069_auto_20190606_0925'), ('order', '0070_auto_20190606_1530'), ('order', '0071_auto_20190703_2108'), ('order', '0072_auto_20190704_1223'), ('order', '0066_merge_20190522_1538'), ('order', '0071_merge_20190613_2055'), ('order', '0073_merge_20190711_2002'), ('order', '0072_customerfeedback_orderitemfeedback_orderitemfeedbackoperation'), ('order', '0073_auto_20190726_1308'), ('order', '0074_merge_20190729_1340'), ('order', '0075_auto_20190801_1003'), ('order', '0076_auto_20190801_1250'), ('order', '0077_auto_20190802_1211'), ('order', '0066_merge_20190524_1522'), ('order', '0067_auto_20190524_1626'), ('order', '0072_merge_20190624_2047'), ('order', '0073_auto_20190725_1745'), ('order', '0074_merge_20190806_1250'), ('order', '0075_auto_20190806_1253'), ('order', '0078_merge_20190807_1231'), ('order', '0079_auto_20190821_1559'), ('order', '0079_auto_20190816_1836'), ('order', '0078_auto_20190826_1733'), ('order', '0080_merge_20190905_1231'), ('order', '0081_ltvmonthlyrecord'), ('order', '0080_merge_20190909_1615'), ('order', '0082_merge_20190927_1721'), ('order', '0081_auto_20191004_1210'), ('order', '0083_merge_20191009_1542'), ('order', '0084_auto_20191009_1542'), ('order', '0085_auto_20191010_1419'), ('order', '0086_auto_20191011_1141'), ('order', '0087_auto_20191017_1455'), ('order', '0083_merge_20191007_1557'), ('order', '0088_merge_20191104_1317'), ('order', '0089_auto_20191104_1318'), ('order', '0087_merge_20191029_1052'), ('order', '0090_merge_20191204_1503'), ('order', '0094_merge_20200109_1056'), ('order', '0090_merge_20191121_1839'), ('order', '0092_merge_20191217_2122'), ('order', '0090_merge_20191204_1816'), ('order', '0091_auto_20191205_1153'), ('order', '0093_merge_20191230_1325'), ('order', '0091_auto_20191218_1522'), ('order', '0095_merge_20200521_1552'), ('order', '0096_auto_20200521_1602')]

    initial = True

    dependencies = [
        ('shop', '0001_initial'),
        ('geolocation', '0002_country_profile_url'),
        ('partner', '0001_initial'),
        ('linkedin', '0001_initial'),
        ('coupon', '0005_auto_20170821_1322'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('geolocation', '0001_initial'),
        ('shop', '0014_deliveryservice_active'),
        ('cart', '0003_lineitem_product'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('number', models.CharField(db_index=True, max_length=128, verbose_name='Order number')),
                ('site', models.PositiveSmallIntegerField(choices=[(0, 'Shinelearning'), (1, 'Cpcrm'), (2, 'ResumeShine.com')], default=0)),
                ('candidate_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Unpaid'), (1, 'Paid'), (2, 'InProcess'), (3, 'Closed'), (4, 'Archive'), (5, 'Cancelled')], default=0)),
                ('currency', models.PositiveIntegerField(choices=[(0, 'Rs.'), (1, '$'), (2, 'AED'), (3, 'GBP')], default=0, verbose_name='Currency')),
                ('total_incl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Payable Amount (inc. tax)')),
                ('total_excl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Amount (excl. tax excl. Point)')),
                ('date_placed', models.DateTimeField(db_index=True)),
                ('closed_on', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(max_length=255, null=True, verbose_name='Customer Email')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last Name')),
                ('country_code', models.CharField(blank=True, max_length=15, null=True, verbose_name='Country Code')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=15, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='geolocation.Country')),
                ('welcome_call_done', models.BooleanField(default=False)),
                ('midout_sent_on', models.DateTimeField(blank=True, null=True)),
                ('paid_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_paid_by', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.FileField(blank=True, max_length=255, null=True, upload_to=order.functions.get_upload_path_order_invoice)),
                ('tax_config', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('archive_json', models.TextField(blank=True, editable=False, verbose_name='Archive JSON')),
                ('co_id', models.IntegerField(blank=True, editable=False, null=True, verbose_name='CP Order')),
                ('conv_charge', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Convienance Charges')),
                ('crm_lead_id', models.CharField(blank=True, max_length=255, null=True)),
                ('crm_sales_id', models.CharField(blank=True, max_length=255, null=True)),
                ('sales_user_info', models.TextField(blank=True, default='', null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_assigned', to=settings.AUTH_USER_MODEL)),
                ('wc_cat', models.PositiveIntegerField(choices=[(21, 'Process Order'), (22, 'Service Issue'), (23, 'Call Back')], default=0, verbose_name='Welcome Call Category')),
                ('wc_follow_up', models.DateTimeField(blank=True, null=True)),
                ('wc_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Re Allocated'), (41, 'No Issue'), (42, 'Order Processed After Final Reminder'), (61, 'Service Issue'), (62, 'On Hold'), (63, 'Process order'), (64, 'Refund'), (65, 'Replacement Order'), (81, 'No answer'), (82, 'Not reachable'), (83, 'User is busy')], default=0, verbose_name='Welcome Call Status')),
                ('wc_sub_cat', models.PositiveIntegerField(choices=[(41, 'No Issue'), (42, 'Order Processed After Final Reminder'), (62, 'On Hold'), (63, 'Process order'), (64, 'Refund'), (65, 'Replace Item'), (81, 'No answer'), (82, 'Not reachable'), (83, 'User is busy'), (61, 'Service Issue')], default=0, verbose_name='Welcome Call Sub-Category')),
                ('alt_email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alternate Email')),
                ('alt_mobile', models.CharField(blank=True, max_length=15, null=True, verbose_name='Alternate Mobile')),
                ('welcome_call_records', models.TextField(blank=True, null=True, verbose_name='Call Recording')),
                ('auto_upload', models.BooleanField(default=False)),
                ('service_resume_upload_shine', models.BooleanField(default=True)),
                ('utm_params', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-date_placed'],
                'verbose_name': 'Order',
                'permissions': (('can_show_order_queue', 'Can Show Order Queue'), ('can_show_all_order', 'Can View All Orders'), ('can_show_paid_order', 'Can View Only Paid Orders'), ('can_show_welcome_queue', 'Can Show Welcome Queue'), ('can_view_order_detail', 'Can View Order Deatil'), ('can_mark_order_as_paid', 'Can Mark Order As Paid'), ('can_search_order_from_console', 'Can Search Order From Console')),
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_name', models.CharField(blank=True, max_length=128, verbose_name='Partner name')),
                ('title', models.CharField(max_length=255, verbose_name='Product title')),
                ('upc', models.CharField(blank=True, max_length=128, null=True, verbose_name='UPC')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('oi_price_before_discounts_incl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Price before discounts (inc. tax)')),
                ('oi_price_before_discounts_excl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Price before discounts (excl. tax)')),
                ('no_process', models.BooleanField(default=False)),
                ('is_combo', models.BooleanField(default=False)),
                ('is_variation', models.BooleanField(default=False)),
                ('oi_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Resume upload is pending'), (3, 'Resume Uploaded'), (4, 'Closed'), (5, 'Service is under progress'), (6, 'Service has been processed'), (10, 'On Hold by Vendor'), (11, 'Archived'), (12, 'Unhold by Vendor'), (13, 'Shine Resume'), (14, 'Cancelled'), (21, 'Upload Draft'), (22, 'Draft Uploaded'), (23, 'Pending Approval'), (24, 'Approved'), (25, 'Rejected By Admin'), (26, 'Rejected By Candidate'), (27, 'Service has been processed and Document is finalized'), (28, 'Feature profile initiated'), (29, 'Feature profile expired'), (30, 'Feature profile updated'), (31, 'Jobs Link Pending'), (32, 'Jobs Link Sent'), (33, 'Boarded on Neo'), (34, 'Service paused'), (35, 'Service Resumed'), (42, 'Counselling Form Submitted'), (44, 'Linkedin Draft Created'), (45, 'Linkedin Pending Approval'), (46, 'Linkedin Approved'), (47, 'Linkedin Rejected By Admin'), (48, 'Linkedi Rejected By Candidate'), (49, 'Couselling form is pending'), (61, 'Service will be initiated once resume is finalized'), (62, 'Resume Boosted'), (81, 'Pending Verification Reports'), (82, 'Service is initiated'), (101, 'To start learning , it is mandatory to take this test'), (121, 'Service has been processed and Final document is ready'), (141, 'Your profile to be shared with interviewer is pending'), (142, 'Round one is not expired'), (143, 'Round one is expired'), (161, 'Refund initiated'), (162, 'Refund under progress'), (163, 'Refunded'), (164, 'Replaced'), (181, 'Waiting for input'), (191, 'Certificate Updated on Shine'), (192, 'Badging Done for Assesment')], default=0, verbose_name='Operation Status')),
                ('last_oi_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Resume upload is pending'), (3, 'Resume Uploaded'), (4, 'Closed'), (5, 'Service is under progress'), (6, 'Service has been processed'), (10, 'On Hold by Vendor'), (11, 'Archived'), (12, 'Unhold by Vendor'), (13, 'Shine Resume'), (14, 'Cancelled'), (21, 'Upload Draft'), (22, 'Draft Uploaded'), (23, 'Pending Approval'), (24, 'Approved'), (25, 'Rejected By Admin'), (26, 'Rejected By Candidate'), (27, 'Service has been processed and Document is finalized'), (28, 'Feature profile initiated'), (29, 'Feature profile expired'), (30, 'Feature profile updated'), (31, 'Jobs Link Pending'), (32, 'Jobs Link Sent'), (33, 'Boarded on Neo'), (34, 'Service paused'), (35, 'Service Resumed'), (42, 'Counselling Form Submitted'), (44, 'Linkedin Draft Created'), (45, 'Linkedin Pending Approval'), (46, 'Linkedin Approved'), (47, 'Linkedin Rejected By Admin'), (48, 'Linkedi Rejected By Candidate'), (49, 'Couselling form is pending'), (61, 'Service will be initiated once resume is finalized'), (62, 'Resume Boosted'), (81, 'Pending Verification Reports'), (82, 'Service is initiated'), (101, 'To start learning , it is mandatory to take this test'), (121, 'Service has been processed and Final document is ready'), (141, 'Your profile to be shared with interviewer is pending'), (142, 'Round one is not expired'), (143, 'Round one is expired'), (161, 'Refund initiated'), (162, 'Refund under progress'), (163, 'Refunded'), (164, 'Replaced'), (181, 'Waiting for input'), (191, 'Certificate Updated on Shine'), (192, 'Badging Done for Assesment')], default=0, verbose_name='Last Operation Status')),
                ('oi_resume', models.FileField(blank=True, default='', max_length=255, null=True, upload_to='shinelearning/resumes/')),
                ('oi_draft', models.FileField(blank=True, max_length=255, null=True, upload_to='shinelearning/resumes/')),
                ('draft_counter', models.PositiveIntegerField(default=0)),
                ('tat_date', models.DateTimeField(blank=True, null=True)),
                ('waiting_for_input', models.BooleanField(default=False)),
                ('closed_on', models.DateTimeField(blank=True, null=True)),
                ('draft_added_on', models.DateTimeField(blank=True, null=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oi_assigned_by', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oi_assigned', to=settings.AUTH_USER_MODEL)),
                ('oio_linkedin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='linkedin.Draft')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitems', to='order.Order', verbose_name='Order')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.OrderItem')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='partner.Vendor', verbose_name='Partner')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Product', verbose_name='Product')),
                ('user_feedback', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('is_addon', models.BooleanField(default=False)),
                ('delivery_price_excl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Delivery Price (site price)')),
                ('delivery_price_incl_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Delivery Price (incl. tax excl Discount)')),
                ('delivery_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delivery_orderitems', to='shop.DeliveryService')),
                ('oi_flow_status', models.PositiveSmallIntegerField(choices=[(0, 'default'), (41, 'Counselling Form Not Submitted'), (42, 'Counselling Form Submitted'), (50, 'Draft 1 Send'), (51, 'Linked In Tip 1'), (52, 'Linked In Tip 2'), (53, 'Linked In Tip 3'), (54, 'Linked In Tip 4'), (55, 'Linked In Tip 5'), (56, 'Linked In Tip 6')], default=0)),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Price before discounts (Site Price)')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Discount (incl. Wallet)')),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Selling Price (incl. tax)')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='tax amount')),
                ('archive_json', models.TextField(blank=True, editable=False, verbose_name='Archive JSON')),
                ('coi_id', models.IntegerField(blank=True, editable=False, null=True, verbose_name='CP OrderItem')),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('buy_count_updated', models.BooleanField(default=False)),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('wc_cat', models.PositiveIntegerField(choices=[(21, 'Process Order'), (22, 'Service Issue'), (23, 'Call Back')], default=0, verbose_name='Welcome Call Category')),
                ('wc_follow_up', models.DateTimeField(blank=True, null=True)),
                ('wc_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Re Allocated'), (41, 'No Issue'), (42, 'Order Processed After Final Reminder'), (61, 'Service Issue'), (62, 'On Hold'), (63, 'Process order'), (64, 'Refund'), (65, 'Replacement Order'), (81, 'No answer'), (82, 'Not reachable'), (83, 'User is busy')], default=0, verbose_name='Welcome Call Status')),
                ('wc_sub_cat', models.PositiveIntegerField(choices=[(41, 'No Issue'), (42, 'Order Processed After Final Reminder'), (62, 'On Hold'), (63, 'Process order'), (64, 'Refund'), (65, 'Replace Item'), (81, 'No answer'), (82, 'Not reachable'), (83, 'User is busy'), (61, 'Service Issue')], default=0, verbose_name='Welcome Call Sub-Category')),
                ('replacement_order_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='Replacement Order number')),
                ('autologin_url', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Auto Login Url')),
                ('pending_links_count', models.IntegerField(blank=True, default=0, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('is_resume_candidate_upload', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'Order Item',
                'permissions': (('can_show_midout_queue', 'Can Show Midout Queue'), ('can_upload_candidate_resume', 'Can Upload Candidate resume'), ('can_show_inbox_queue', 'Can Show Writer Inbox Queue'), ('can_view_extra_field_inbox', 'Can View Extra Fields Of Writer Inbox'), ('writer_inbox_assigner', 'Writer Inbox Assigner'), ('writer_inbox_assignee', 'Writer Inbox Assignee'), ('can_view_order_item_detail', 'Can View Order Item Detail'), ('writer_assignment_linkedin_action', 'Can Assign to Other linkedin writer'), ('can_assigned_to_linkedin_writer', 'Can Assigned To This linkedin Writer'), ('can_show_linkedinrejectedbyadmin_queue', 'Can View Linkedin Rejected By Admin Queue'), ('can_show_linkedinrejectedbycandidate_queue', 'Can View LinkedinRejected By Candidate Queue'), ('can_show_linkedin_approval_queue', 'Can View Linkedin Approval Queue'), ('can_show_linkedin_approved_queue', 'Can View Linkedin Approved Queue'), ('can_show_linkedin_inbox_queue', 'Can View Linkedin Inbox Queue'), ('can_show_linkedin_writer_draft', 'Can View Linkedin Writer Draft'), ('can_show_linkedin_counselling_form', 'Can View Linkedin Counselling Form'), ('can_view_counselling_form_in_approval_queue', 'Can View Counselling Form In Approval Queue'), ('can_show_approval_queue', 'Can View Approval Queue'), ('can_view_all_approval_list', 'Can View All Approval List'), ('can_view_only_assigned_approval_list', 'Can View Only Assigned Approval List'), ('can_approve_or_reject_draft', 'Can Approve Or Reject Draft'), ('can_show_approved_queue', 'Can View Approved Queue'), ('can_view_all_approved_list', 'Can View All Approved List'), ('can_view_only_assigned_approved_list', 'Can View Only Assigned Approved List'), ('can_show_rejectedbyadmin_queue', 'Can View Rejected By Admin Queue'), ('can_view_all_rejectedbyadmin_list', 'Can View All Rejected by Admin List'), ('can_view_only_assigned_rejectedbyadmin_list', 'Can View Only Assigned Rejected By Admin List'), ('can_show_rejectedbycandidate_queue', 'Can View Rejected By Candidate Queue'), ('can_view_all_rejectedbycandidate_list', 'Can View All Rejected By Candidate List'), ('can_view_only_assigned_rejectedbycandidate_list', 'Can View Only Assigned Rejected By Candidate List'), ('can_show_allocated_queue', 'Can Show Allocated Queue'), ('can_view_all_allocated_list', 'Can View All Allocated List'), ('can_view_only_assigned_allocated_list', 'Can View Only Assigned Allocated List'), ('can_show_booster_queue', 'Can Show Booster Queue'), ('can_show_domestic_profile_update_queue', 'Can Show Domestic Profile Update Queue'), ('domestic_profile_update_assigner', 'Domestic Profile Update Assigner'), ('domestic_profile_update_assignee', 'Domestic Profile Update Assignee'), ('can_show_domestic_profile_initiated_queue', 'Can Show Domestic Profile Initiated Queue'), ('can_show_domestic_profile_approval_queue', 'Can Show Domestic Profile Approval Queue'), ('can_show_international_profile_update_queue', 'Can Show International Profile Update Queue'), ('international_profile_update_assigner', 'International Profile Update Assigner'), ('international_profile_update_assignee', 'International Profile Update Assignee'), ('can_show_international_profile_approval_queue', 'Can Show International Profile Approval Queue'), ('can_show_closed_oi_queue', 'Can Show Closed Orderitem Queue'), ('can_view_all_closed_oi_list', 'Can View All Closed Orderitem List'), ('can_view_only_assigned_closed_oi_list', 'Can View Only Assigned Closed Orderitem List'), ('can_show_partner_inbox_queue', 'Can Show Partner Inbox Queue'), ('show_test_status_fields', 'Show Test Status Field For Studymate'), ('can_show_hold_orderitem_queue', 'Can Show Hold Orderitem Queue'), ('can_show_varification_report_queue', 'Can Show Varification Report Queue'), ('oi_action_permission', 'OrderItem Action Permission'), ('oi_export_as_csv_permission', 'Order Item Export As CSV Permission'), ('can_generate_compliance_report', 'can create compliance report permmission'), ('can_view_assigned_jobs_on_the_move', 'Can view assigned jobs on the move'), ('can_assign_jobs_on_the_move', 'Can assign jobs on the move'), ('can_send_jobs_on_the_move', 'Can send assigned jobs on the move'), ('can_approve_jobs_on_the_move', 'Can Approve jobs on the move'), ('can_update_manual_links', 'Can Update Manual Links')),
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.CreateModel(
            name='InternationalProfileCredential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, verbose_name='Username')),
                ('password', models.CharField(blank=True, max_length=100, null=True, verbose_name='Password')),
                ('candidateid', models.CharField(blank=True, max_length=100, null=True, verbose_name='CandidateId')),
                ('candidate_email', models.CharField(max_length=100, verbose_name='Candidate Email')),
                ('site_url', models.CharField(blank=True, max_length=100, null=True, verbose_name='Site Url')),
                ('profile_status', models.BooleanField(default=False)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='geolocation.Country')),
                ('oi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.OrderItem')),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CouponOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('coupon_code', models.CharField(blank=True, max_length=30, null=True, verbose_name='Coupon Code')),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Value')),
                ('coupon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coupon.Coupon', verbose_name='Coupon')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RefundRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('message', models.TextField()),
                ('document', models.FileField(blank=True, max_length=255, null=True, upload_to='refund/refund_request/')),
                ('status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Ops Head Approval'), (2, 'Ops Head Rejected'), (3, 'Business Head Approval'), (4, 'Business Head Rejected'), (5, 'Dept. Head Approval'), (6, 'Dept. Head Rejected'), (7, 'Finance Approval'), (8, 'Refund Approved'), (9, 'Refund Initiate'), (10, 'Refund under progress'), (11, 'Refunded'), (12, 'Request Updated'), (13, 'Cancel Request')], default=0, verbose_name='Status')),
                ('last_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Ops Head Approval'), (2, 'Ops Head Rejected'), (3, 'Business Head Approval'), (4, 'Business Head Rejected'), (5, 'Dept. Head Approval'), (6, 'Dept. Head Rejected'), (7, 'Finance Approval'), (8, 'Refund Approved'), (9, 'Refund Initiate'), (10, 'Refund under progress'), (11, 'Refunded'), (12, 'Request Updated'), (13, 'Cancel Request')], default=0, verbose_name='Last Status')),
                ('refund_mode', models.CharField(choices=[('select', 'Select Refund Mode'), ('neft', 'NEFT'), ('cheque', 'CHEQUE'), ('dd', 'DD')], default='select', max_length=255)),
                ('currency', models.PositiveIntegerField(choices=[(0, 'Rs.'), (1, '$'), (2, 'AED'), (3, 'GBP')], default=0, verbose_name='Currency')),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Refund Amount (incl. tax)')),
                ('txn_no', models.CharField(blank=True, help_text='transaction no. in case of neft and serial no. in case cheque/dd', max_length=255, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refund_request_added_by', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.Order', verbose_name='Order')),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-modified',),
                'permissions': (('can_view_refund_request_queue', 'Can View Refund Request Queue'), ('can_view_refund_approval_queue', 'Can View Refund Approval Queue')),
            },
        ),
        migrations.CreateModel(
            name='RefundItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('type_refund', models.CharField(choices=[('select', 'Select Refund Type'), ('full', 'Full Refund'), ('partial', 'Partial Refund')], default='select', max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Amount (incl. tax)')),
                ('oi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refund_items', to='order.OrderItem')),
                ('refund_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.RefundRequest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RefundOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Ops Head Approval'), (2, 'Ops Head Rejected'), (3, 'Business Head Approval'), (4, 'Business Head Rejected'), (5, 'Dept. Head Approval'), (6, 'Dept. Head Rejected'), (7, 'Finance Approval'), (8, 'Refund Approved'), (9, 'Refund Initiate'), (10, 'Refund under progress'), (11, 'Refunded'), (12, 'Request Updated'), (13, 'Cancel Request')], default=0, verbose_name='Status')),
                ('last_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Ops Head Approval'), (2, 'Ops Head Rejected'), (3, 'Business Head Approval'), (4, 'Business Head Rejected'), (5, 'Dept. Head Approval'), (6, 'Dept. Head Rejected'), (7, 'Finance Approval'), (8, 'Refund Approved'), (9, 'Refund Initiate'), (10, 'Refund under progress'), (11, 'Refunded'), (12, 'Request Updated'), (13, 'Cancel Request')], default=0, verbose_name='Last Status')),
                ('message', models.TextField()),
                ('document', models.FileField(blank=True, max_length=255, null=True, upload_to='refund/refund_ops/')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refund_ops_added_by', to=settings.AUTH_USER_MODEL)),
                ('refund_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.RefundRequest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItemOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('oi_resume', models.FileField(blank=True, max_length=255, null=True, upload_to='shinelearning/resumes/')),
                ('oi_draft', models.FileField(blank=True, max_length=255, null=True, upload_to='shinelearning/resumes/')),
                ('draft_counter', models.PositiveIntegerField(default=0)),
                ('oi_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Resume upload is pending'), (3, 'Resume Uploaded'), (4, 'Closed'), (5, 'Service is under progress'), (6, 'Service has been processed'), (10, 'On Hold by Vendor'), (11, 'Archived'), (12, 'Unhold by Vendor'), (13, 'Shine Resume'), (14, 'Cancelled'), (21, 'Upload Draft'), (22, 'Draft Uploaded'), (23, 'Pending Approval'), (24, 'Approved'), (25, 'Rejected By Admin'), (26, 'Rejected By Candidate'), (27, 'Service has been processed and Document is finalized'), (28, 'Feature profile initiated'), (29, 'Feature profile expired'), (30, 'Feature profile updated'), (31, 'Jobs Link Pending'), (32, 'Jobs Link Sent'), (33, 'Boarded on Neo'), (34, 'Service paused'), (35, 'Service Resumed'), (42, 'Counselling Form Submitted'), (44, 'Linkedin Draft Created'), (45, 'Linkedin Pending Approval'), (46, 'Linkedin Approved'), (47, 'Linkedin Rejected By Admin'), (48, 'Linkedi Rejected By Candidate'), (49, 'Couselling form is pending'), (61, 'Service will be initiated once resume is finalized'), (62, 'Resume Boosted'), (81, 'Pending Verification Reports'), (82, 'Service is initiated'), (101, 'To start learning , it is mandatory to take this test'), (121, 'Service has been processed and Final document is ready'), (141, 'Your profile to be shared with interviewer is pending'), (142, 'Round one is not expired'), (143, 'Round one is expired'), (161, 'Refund initiated'), (162, 'Refund under progress'), (163, 'Refunded'), (164, 'Replaced'), (181, 'Waiting for input'), (191, 'Certificate Updated on Shine'), (192, 'Badging Done for Assesment')], default=0, verbose_name='Operation Status')),
                ('last_oi_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Resume upload is pending'), (3, 'Resume Uploaded'), (4, 'Closed'), (5, 'Service is under progress'), (6, 'Service has been processed'), (10, 'On Hold by Vendor'), (11, 'Archived'), (12, 'Unhold by Vendor'), (13, 'Shine Resume'), (14, 'Cancelled'), (21, 'Upload Draft'), (22, 'Draft Uploaded'), (23, 'Pending Approval'), (24, 'Approved'), (25, 'Rejected By Admin'), (26, 'Rejected By Candidate'), (27, 'Service has been processed and Document is finalized'), (28, 'Feature profile initiated'), (29, 'Feature profile expired'), (30, 'Feature profile updated'), (31, 'Jobs Link Pending'), (32, 'Jobs Link Sent'), (33, 'Boarded on Neo'), (34, 'Service paused'), (35, 'Service Resumed'), (42, 'Counselling Form Submitted'), (44, 'Linkedin Draft Created'), (45, 'Linkedin Pending Approval'), (46, 'Linkedin Approved'), (47, 'Linkedin Rejected By Admin'), (48, 'Linkedi Rejected By Candidate'), (49, 'Couselling form is pending'), (61, 'Service will be initiated once resume is finalized'), (62, 'Resume Boosted'), (81, 'Pending Verification Reports'), (82, 'Service is initiated'), (101, 'To start learning , it is mandatory to take this test'), (121, 'Service has been processed and Final document is ready'), (141, 'Your profile to be shared with interviewer is pending'), (142, 'Round one is not expired'), (143, 'Round one is expired'), (161, 'Refund initiated'), (162, 'Refund under progress'), (163, 'Refunded'), (164, 'Replaced'), (181, 'Waiting for input'), (191, 'Certificate Updated on Shine'), (192, 'Badging Done for Assesment')], default=0, verbose_name='Last Operation Status')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oio_added_by', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oio_assigned', to=settings.AUTH_USER_MODEL)),
                ('linkedin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='linkedin.Draft')),
                ('oi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.OrderItem')),
                ('coio_id', models.IntegerField(blank=True, editable=False, null=True, verbose_name='CP Order IO')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.CharField(max_length=255, null=True)),
                ('message', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='message_added_by', to=settings.AUTH_USER_MODEL)),
                ('oi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='order.OrderItem')),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('oio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='order.OrderItemOperation')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='SmsOrderItemOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('sms_oi_status', models.PositiveIntegerField(choices=[(0, 'default'), (1, 'Sent Offline Payment Sms'), (2, 'Sent Online Payment Sms'), (3, 'Sent Resume Auto Closer Sms'), (4, 'Sent Closer Sms'), (5, 'Sent Sms For Paid Order day1'), (6, 'Sent Sms For Paid Order day2'), (21, 'Sent Flow1 Pending Resume Sms'), (22, 'Sent First Draft Sms'), (23, 'Sent Second Draft Sms'), (24, 'Sent Final Draft Sms'), (25, 'Sent Reminder Draft1 Sms'), (26, 'Sent Reminder Draft2 Sms'), (27, 'Sent Flow1 Online Payment Sms'), (41, 'Sent Resume Critique Pending Resume Sms'), (42, 'Sent Resume Critique Closed Sms'), (43, 'Sent Flow3 Online Payment Sms'), (61, 'Sent International Profile Pending Resume Sms'), (62, 'Sent Flow4 Online Payment Sms'), (71, 'Sent Feature Profile Pending Resume Sms'), (72, 'Sent Flow5 Online Payment Sms'), (91, 'Sent Resume Booster Pending Resume Sms'), (92, 'Sent Resume Booster consultant/Recruiter Sms'), (93, 'Sent Resume Booster Candidate Sms'), (94, 'Sent Flow7 Online Payment Sms'), (101, 'Sent Allocated To Writer Sms For Linkedin'), (102, 'Sent Linkedin First Draft Sms'), (103, 'Sent Linkedin Second Draft Sms'), (104, 'Sent Linkedin Final Draft Sms'), (105, 'Sent Flow8 Online Payment Sms'), (106, 'Sent Linkedin Draft1 Reminder Sms'), (107, 'Sent Linkedin Draft2 Reminder Sms'), (108, 'Sent Pending Counselling Form Sms'), (121, 'Sent RoundOne Incomplete Profile Sms'), (122, 'Sent Flow9 Online Payment Sms'), (131, 'Sent Pending Studymate Test Sms'), (132, 'Sent Flow10 Online Payment Sms'), (133, 'Sent Flow10 Service Initiation Sms'), (141, 'Sent Flow12 Pending Resume Sms'), (142, 'Sent Flow12 First Draft Sms'), (143, 'Sent Flow12 Second Draft Sms'), (144, 'Sent Flow12 Final Draft Sms'), (145, 'Sent Flow12 Online Payment Sms'), (151, 'Sent Flow13 Pending Resume Sms'), (152, 'Sent Flow13 First Draft Sms'), (153, 'Sent Flow13 Second Draft Sms'), (154, 'Sent Flow13 Final Draft Sms'), (155, 'Sent Flow13 Online Payment Sms'), (161, 'Sent Flow2 Process Sms'), (162, 'Sent Flow2 Service Initiation Sms'), (171, 'Sent Flow6 Process Sms'), (172, 'Sent Flow6 Service Initiation Sms'), (191, 'Sent Flow14 Process Sms'), (192, 'Sent Flow14 Service Initiation Sms')], default=0, verbose_name='SMS Operation Status')),
                ('draft_counter', models.PositiveIntegerField(default=0)),
                ('oi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.OrderItem')),
                ('status', models.PositiveIntegerField(default=0)),
                ('to_mobile', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='EmailOrderItemOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('email_oi_status', models.PositiveIntegerField(choices=[(0, 'default'), (1, 'Sent Payment Pending Email'), (2, 'Sent Process Mailers'), (3, 'Sent Welcome Email'), (4, 'Sent Forgot Email'), (5, 'Sent Feedback Email'), (6, 'Sent Feedback Coupon Email'), (7, 'Sent Payment Realisation Email'), (8, 'Sent Cart Drop Out Mailer'), (9, 'Sent Closer Mailer'), (21, 'Sent Flow1 Pending Resume Email'), (22, 'Sent First Draft Email'), (23, 'Sent Second Draft Email'), (24, 'Sent Final Draft Email'), (25, 'Sent Flow1 Process Mailer'), (26, 'Sent Reminder Draft1 Email'), (27, 'Sent Reminder Draft2 Email'), (28, 'Sent Flow1 Allocated Writer Email'), (41, 'Sent Resume Critique Pending Resume Email'), (42, 'Sent Resume Critique Allocated To Writer Email'), (43, 'Sent Resume Critique Closed Email'), (44, 'Sent Resume Critique Process Mailer'), (61, 'Sent International Profile Pending Resume Email'), (62, 'Sent International profile updated Email'), (63, 'Sent International profile Writer Assignment Email'), (64, 'Sent International profile Process Mailer'), (71, 'Sent Feature Profile Pending Resume Email'), (72, 'Sent Feature profile Updated Email'), (74, 'Sent Feature profile Process Mailer'), (91, 'Sent Resume Booster Pending Resume Email'), (92, 'Sent Resume Booster consultant/Recruiter Email'), (93, 'Sent Resume Booster Candidate Email'), (94, 'Sent Resume Booster Candidate Process Mailer'), (101, 'Sent Allocated To Writer Email For Linkedin'), (102, 'Sent Linkedin First Draft Email'), (103, 'Sent Linkedin Second Draft Email'), (104, 'Sent Linkedin Final Draft Email'), (105, 'Sent Linkedin Process Mailer'), (106, 'Sent Linkedin Draft1 Reminder Email'), (107, 'Sent Linkedin Draft2 Reminder Email'), (108, 'Sent Pending Counselling Form Email'), (109, 'Sent Linked In Tip 1'), (110, 'Sent Linked In Tip 2'), (111, 'Sent Linked In Tip 3'), (112, 'Sent Linked In Tip 4'), (113, 'Sent Linked In Tip 5'), (114, 'Sent Linked In Tip 6'), (121, 'Sent RoundOne Incomplete Profile Email'), (122, 'Sent RoundOne Process Mailer'), (131, 'Sent Pending Studymate Test Email'), (132, 'Sent Studymate Process Mailer'), (141, 'Sent Flow12 Pending Resume Email'), (142, 'Sent Flow12 First Draft Email'), (143, 'Sent Flow12 Second Draft Email'), (144, 'Sent Flow12 Final Draft Email'), (145, 'Sent Flow12 Process Mailer'), (146, 'Sent Flow12 Assignment Mailer'), (151, 'Sent Flow13 Pending Resume Email'), (152, 'Sent Flow13 First Draft Email'), (153, 'Sent Flow13 Second Draft Email'), (154, 'Sent Flow13 Final Draft Email'), (155, 'Sent Flow13 Process Mailer'), (156, 'Sent Flow13 Assignment Mailer'), (161, 'Sent Flow2 Process Mailer'), (171, 'Sent Flow6 Process Mailer'), (181, ''), (191, 'Sent Flow14 Process Mailer'), (192, 'Sent Flow14 Service Initiation Mailer'), (201, 'Certification Mail')], default=0, verbose_name='Email Operation Status')),
                ('draft_counter', models.PositiveIntegerField(default=0)),
                ('oi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.OrderItem')),
                ('status', models.PositiveIntegerField(default=0)),
                ('to_email', models.CharField(blank=True, max_length=100, null=True, verbose_name='To Email')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='CustomerFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_id', models.CharField(max_length=100, verbose_name='Candidate Id')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Name')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Name')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Pending'), (2, 'Assigned'), (3, 'Closed')], default=1)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True, verbose_name='Follow Up Date')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Feedback Comment')),
                ('last_payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Payment Date')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ltv', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('category', models.SmallIntegerField(blank=True, choices=[(101, 'Service Utilized'), (102, 'Not Utilized'), (103, 'In process'), (104, 'Annoyed'), (105, 'Call Back'), (201, 'Not Connected')], null=True)),
                ('resolution', models.SmallIntegerField(blank=True, choices=[(1, 'Shared the service details'), (2, 'Shared the login details'), (3, 'Shared the drafts'), (4, 'Swapping of the services'), (5, 'Complimentary service'), (6, 'Educate about the services')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WelcomeCallOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('message', models.TextField(blank=True)),
                ('wc_cat', models.PositiveIntegerField(choices=[(21, 'Process Order'), (22, 'Service Issue'), (23, 'Call Back')], default=0, verbose_name='Welcome Call Category')),
                ('wc_sub_cat', models.PositiveIntegerField(choices=[(41, 'No Issue'), (42, 'Order Processed After Final Reminder'), (62, 'On Hold'), (63, 'Process order'), (64, 'Refund'), (65, 'Replace Item'), (81, 'No answer'), (82, 'Not reachable'), (83, 'User is busy'), (61, 'Service Issue')], default=0, verbose_name='Welcome Call Sub-Category')),
                ('wc_status', models.PositiveIntegerField(choices=[(0, 'Default'), (1, 'Assigned'), (2, 'Re Allocated'), (41, 'No Issue'), (42, 'Order Processed After Final Reminder'), (61, 'Service Issue'), (62, 'On Hold'), (63, 'Process order'), (64, 'Refund'), (65, 'Replacement Order'), (81, 'No answer'), (82, 'Not reachable'), (83, 'User is busy')], default=0, verbose_name='Welcome Call Status')),
                ('wc_follow_up', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wcall_assigned', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wop_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('order', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='order.Order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonthlyLTVRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ltv_bracket', models.SmallIntegerField(choices=[(0, '0-5k'), (1, '5-10k'), (2, '10-20k'), (3, '20-40k'), (4, '40-60k'), (5, '60-80k'), (6, '80-100k'), (7, '100-125k'), (8, '125-150k'), (9, '150-175k'), (10, '175k+')])),
                ('crm_order_ids', models.TextField()),
                ('learning_order_ids', models.TextField()),
                ('crm_item_count', models.IntegerField()),
                ('learning_item_count', models.IntegerField()),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018)])),
                ('month', models.IntegerField(validators=[django.core.validators.MaxValueValidator(12), django.core.validators.MinValueValidator(1)])),
                ('candidate_ids', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LTVMonthlyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ltv_bracket', models.SmallIntegerField(choices=[(0, '0-5k'), (1, '5-10k'), (2, '10-20k'), (3, '20-40k'), (4, '40-60k'), (5, '60-80k'), (6, '80-100k'), (7, '100-125k'), (8, '125-150k'), (9, '150-175k'), (10, '175k+')])),
                ('total_users', models.IntegerField()),
                ('total_order_count', models.IntegerField()),
                ('total_item_count', models.IntegerField()),
                ('crm_order_count', models.IntegerField()),
                ('crm_item_count', models.IntegerField()),
                ('learning_order_count', models.IntegerField()),
                ('learning_item_count', models.IntegerField()),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2018)])),
                ('month', models.IntegerField(validators=[django.core.validators.MaxValueValidator(12), django.core.validators.MinValueValidator(1)])),
                ('candidate_id_ltv_mapping', models.TextField()),
                ('crm_users', models.IntegerField(default=0)),
                ('learning_users', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.SmallIntegerField(blank=True, choices=[(101, 'Service Utilized'), (102, 'Not Utilized'), (103, 'In process'), (104, 'Annoyed'), (105, 'Call Back'), (201, 'Not Connected')], null=True)),
                ('resolution', models.SmallIntegerField(blank=True, choices=[(1, 'Shared the service details'), (2, 'Shared the login details'), (3, 'Shared the drafts'), (4, 'Swapping of the services'), (5, 'Complimentary service'), (6, 'Educate about the services')], null=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Feedback Comment')),
                ('customer_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.CustomerFeedback')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.OrderItem')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemFeedbackOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('category', models.SmallIntegerField(blank=True, choices=[(101, 'Service Utilized'), (102, 'Not Utilized'), (103, 'In process'), (104, 'Annoyed'), (105, 'Call Back'), (201, 'Not Connected')], null=True)),
                ('resolution', models.SmallIntegerField(blank=True, choices=[(1, 'Shared the service details'), (2, 'Shared the login details'), (3, 'Shared the drafts'), (4, 'Swapping of the services'), (5, 'Complimentary service'), (6, 'Educate about the services')], null=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Feedback Comment')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.CustomerFeedback')),
                ('order_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.OrderItem')),
                ('oi_type', models.SmallIntegerField(choices=[(1, 'Order Item Updated'), (2, 'Feedback Message Updated'), (3, 'Assigned'), (4, 'Reassigned'), (5, 'Follow Up'), (6, 'Customer Category Updated'), (7, 'Customer Resolution Updated')], default=-1)),
                ('feedback_category', models.SmallIntegerField(choices=[(101, 'Service Utilized'), (102, 'Not Utilized'), (103, 'In process'), (104, 'Annoyed'), (105, 'Call Back'), (201, 'Not Connected')], default=-1)),
                ('feedback_resolution', models.SmallIntegerField(choices=[(1, 'Shared the service details'), (2, 'Shared the login details'), (3, 'Shared the drafts'), (4, 'Swapping of the services'), (5, 'Complimentary service'), (6, 'Educate about the services')], default=-1)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True, verbose_name='Follow Up Date')),
            ],
        ),
        migrations.CreateModel(
            name='GazettedHoliday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holiday_date', models.DateField(unique=True)),
                ('holiday_type', models.CharField(blank=True, max_length=25, null=True)),
            ],
        ),
    ]
